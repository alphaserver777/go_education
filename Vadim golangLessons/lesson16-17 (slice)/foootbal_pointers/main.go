/*
Вы создаете программу для анализа результатов спортивных матчей и подсчета очков заданной команды.
Результаты матчей хранятся в срезе results.
Каждый матч имеет один из следующих результатов:
"w" - выиграл
"l" - проиграл
"d" - ничья

Победа добавляет три очка, ничья - одно очко, а проигранный матч не добавляет очков.

Ваша программа должна принять на вход результат последнего матча и добавить его в существующий срез результатов.
После этого необходимо вычислить и вывести общее количество очков, набранных командой по результатам матчей из среза results.
*/

package main

import "fmt"

func main() {
	// Исходные результаты матчей: "w" - победа, "l" - поражение, "d" - ничья
	results := []string{"w", "l", "w", "d", "w", "l", "l", "l", "d", "d", "w", "l", "w", "d"}

	// Добавляем новый результат матча, который вводит пользователь
	newResult := addPoint()
	// Добавляем новый результат в список результатов
	results = append(results, newResult)

	// Преобразуем результаты матчей в очки
	points := changeValue(results)

	// Считаем общее количество очков
	totalPoints := sumPoints(points)

	// Выводим общее количество очков на экран
	fmt.Println("Общее количество очков:", totalPoints)
}

// Функция для добавления нового результата матча
func addPoint() string {
	var x string
	// Просим пользователя ввести результат матча
	fmt.Println("Введите результат матча: w - выиграл, l - проиграл, d - ничья")
	// Считываем ввод пользователя
	fmt.Scan(&x)
	// Возвращаем введенный результат
	return x
}

// Функция для преобразования результатов матчей в очки
func changeValue(results []string) []int {
	// Создаем слайс (список) для хранения очков
	pointers := make([]int, len(results))
	// Проходим по каждому результату в списке результатов
	for i, result := range results {
		// Используем switch для проверки результата
		switch result {
		case "w":
			// Если результат "w" (победа), добавляем 3 очка
			pointers[i] = 3
		case "d":
			// Если результат "d" (ничья), добавляем 1 очко
			pointers[i] = 1
		case "l":
			// Если результат "l" (поражение), добавляем 0 очков
			pointers[i] = 0
		default:
			// Если результат неизвестен, выводим сообщение и добавляем 0 очков
			fmt.Println("Неизвестный результат: ", result)
			pointers[i] = 0
		}
	}
	// Возвращаем слайс с очками
	return pointers
}

// Функция для подсчета общего количества очков
func sumPoints(pointers []int) int {
	// Инициализируем переменную для хранения общего количества очков
	total := 0
	// Проходим по каждому элементу в слайсе с очками
	for _, point := range pointers {
		// Добавляем текущее количество очков к общему количеству
		total += point
	}
	// Возвращаем общее количество очков
	return total
}
